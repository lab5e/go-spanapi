/*
The Span API

API for device, collection, output and firmware management

API version: 5.0.5 contented-jamila
Contact: dev@lab5e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spanapi

import (
	"encoding/json"
)

// checks if the ListLabeledFirmwareResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ListLabeledFirmwareResponse{}

// ListLabeledFirmwareResponse Response object for listing firmware images
type ListLabeledFirmwareResponse struct {
	Images []LabeledFirmware `json:"images,omitempty"`
}

// NewListLabeledFirmwareResponse instantiates a new ListLabeledFirmwareResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListLabeledFirmwareResponse() *ListLabeledFirmwareResponse {
	this := ListLabeledFirmwareResponse{}
	return &this
}

// NewListLabeledFirmwareResponseWithDefaults instantiates a new ListLabeledFirmwareResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListLabeledFirmwareResponseWithDefaults() *ListLabeledFirmwareResponse {
	this := ListLabeledFirmwareResponse{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *ListLabeledFirmwareResponse) GetImages() []LabeledFirmware {
	if o == nil || IsNil(o.Images) {
		var ret []LabeledFirmware
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListLabeledFirmwareResponse) GetImagesOk() ([]LabeledFirmware, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *ListLabeledFirmwareResponse) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []LabeledFirmware and assigns it to the Images field.
func (o *ListLabeledFirmwareResponse) SetImages(v []LabeledFirmware) {
	o.Images = v
}

func (o ListLabeledFirmwareResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ListLabeledFirmwareResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	return toSerialize, nil
}

type NullableListLabeledFirmwareResponse struct {
	value *ListLabeledFirmwareResponse
	isSet bool
}

func (v NullableListLabeledFirmwareResponse) Get() *ListLabeledFirmwareResponse {
	return v.value
}

func (v *NullableListLabeledFirmwareResponse) Set(val *ListLabeledFirmwareResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListLabeledFirmwareResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListLabeledFirmwareResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListLabeledFirmwareResponse(val *ListLabeledFirmwareResponse) *NullableListLabeledFirmwareResponse {
	return &NullableListLabeledFirmwareResponse{value: val, isSet: true}
}

func (v NullableListLabeledFirmwareResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListLabeledFirmwareResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


