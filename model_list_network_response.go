/*
The Span API

API for device, collection, output and firmware management

API version: 4.2.4 curable-andres
Contact: dev@lab5e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spanapi

import (
	"encoding/json"
)

// ListNetworkResponse List networks.
type ListNetworkResponse struct {
	Networks []Network `json:"networks,omitempty"`
}

// NewListNetworkResponse instantiates a new ListNetworkResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewListNetworkResponse() *ListNetworkResponse {
	this := ListNetworkResponse{}
	return &this
}

// NewListNetworkResponseWithDefaults instantiates a new ListNetworkResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewListNetworkResponseWithDefaults() *ListNetworkResponse {
	this := ListNetworkResponse{}
	return &this
}

// GetNetworks returns the Networks field value if set, zero value otherwise.
func (o *ListNetworkResponse) GetNetworks() []Network {
	if o == nil || o.Networks == nil {
		var ret []Network
		return ret
	}
	return o.Networks
}

// GetNetworksOk returns a tuple with the Networks field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ListNetworkResponse) GetNetworksOk() ([]Network, bool) {
	if o == nil || o.Networks == nil {
		return nil, false
	}
	return o.Networks, true
}

// HasNetworks returns a boolean if a field has been set.
func (o *ListNetworkResponse) HasNetworks() bool {
	if o != nil && o.Networks != nil {
		return true
	}

	return false
}

// SetNetworks gets a reference to the given []Network and assigns it to the Networks field.
func (o *ListNetworkResponse) SetNetworks(v []Network) {
	o.Networks = v
}

func (o ListNetworkResponse) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Networks != nil {
		toSerialize["networks"] = o.Networks
	}
	return json.Marshal(toSerialize)
}

type NullableListNetworkResponse struct {
	value *ListNetworkResponse
	isSet bool
}

func (v NullableListNetworkResponse) Get() *ListNetworkResponse {
	return v.value
}

func (v *NullableListNetworkResponse) Set(val *ListNetworkResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableListNetworkResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableListNetworkResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableListNetworkResponse(val *ListNetworkResponse) *NullableListNetworkResponse {
	return &NullableListNetworkResponse{value: val, isSet: true}
}

func (v NullableListNetworkResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableListNetworkResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
