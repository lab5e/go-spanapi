/*
The Span API

API for device, collection, output and firmware management

API version: 4.2.2 smarmy-derik
Contact: dev@lab5e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spanapi

import (
	"encoding/json"
)

// CreateDeviceRequest Request object to create new devices
type CreateDeviceRequest struct {
	// Tags are metadata for the device that you can set. These are just strings.
	Tags     *map[string]string `json:"tags,omitempty"`
	Firmware *FirmwareMetadata  `json:"firmware,omitempty"`
	Config   *DeviceConfig      `json:"config,omitempty"`
	Metadata *DeviceMetadata    `json:"metadata,omitempty"`
	// The IMSI is the unique ID for the (e|nu|whatever)SIM card on your device. This is the primary identifier for your device on the network.  Deprecated: The IMSI is replaced by CellularIoTMetadata
	Imsi *string `json:"imsi,omitempty"`
	// The IMEI number is the unique ID for your hardware as seen by the network. Obviously you might have a completely different view on things.  Deprecated: The IMEI is replaced by CellularIoTMetadata
	Imei    *string          `json:"imei,omitempty"`
	Network *NetworkMetadata `json:"network,omitempty"`
}

// NewCreateDeviceRequest instantiates a new CreateDeviceRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateDeviceRequest() *CreateDeviceRequest {
	this := CreateDeviceRequest{}
	return &this
}

// NewCreateDeviceRequestWithDefaults instantiates a new CreateDeviceRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateDeviceRequestWithDefaults() *CreateDeviceRequest {
	this := CreateDeviceRequest{}
	return &this
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetTags() map[string]string {
	if o == nil || o.Tags == nil {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetTagsOk() (*map[string]string, bool) {
	if o == nil || o.Tags == nil {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasTags() bool {
	if o != nil && o.Tags != nil {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *CreateDeviceRequest) SetTags(v map[string]string) {
	o.Tags = &v
}

// GetFirmware returns the Firmware field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetFirmware() FirmwareMetadata {
	if o == nil || o.Firmware == nil {
		var ret FirmwareMetadata
		return ret
	}
	return *o.Firmware
}

// GetFirmwareOk returns a tuple with the Firmware field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetFirmwareOk() (*FirmwareMetadata, bool) {
	if o == nil || o.Firmware == nil {
		return nil, false
	}
	return o.Firmware, true
}

// HasFirmware returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasFirmware() bool {
	if o != nil && o.Firmware != nil {
		return true
	}

	return false
}

// SetFirmware gets a reference to the given FirmwareMetadata and assigns it to the Firmware field.
func (o *CreateDeviceRequest) SetFirmware(v FirmwareMetadata) {
	o.Firmware = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetConfig() DeviceConfig {
	if o == nil || o.Config == nil {
		var ret DeviceConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetConfigOk() (*DeviceConfig, bool) {
	if o == nil || o.Config == nil {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasConfig() bool {
	if o != nil && o.Config != nil {
		return true
	}

	return false
}

// SetConfig gets a reference to the given DeviceConfig and assigns it to the Config field.
func (o *CreateDeviceRequest) SetConfig(v DeviceConfig) {
	o.Config = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetMetadata() DeviceMetadata {
	if o == nil || o.Metadata == nil {
		var ret DeviceMetadata
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetMetadataOk() (*DeviceMetadata, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given DeviceMetadata and assigns it to the Metadata field.
func (o *CreateDeviceRequest) SetMetadata(v DeviceMetadata) {
	o.Metadata = &v
}

// GetImsi returns the Imsi field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetImsi() string {
	if o == nil || o.Imsi == nil {
		var ret string
		return ret
	}
	return *o.Imsi
}

// GetImsiOk returns a tuple with the Imsi field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetImsiOk() (*string, bool) {
	if o == nil || o.Imsi == nil {
		return nil, false
	}
	return o.Imsi, true
}

// HasImsi returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasImsi() bool {
	if o != nil && o.Imsi != nil {
		return true
	}

	return false
}

// SetImsi gets a reference to the given string and assigns it to the Imsi field.
func (o *CreateDeviceRequest) SetImsi(v string) {
	o.Imsi = &v
}

// GetImei returns the Imei field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetImei() string {
	if o == nil || o.Imei == nil {
		var ret string
		return ret
	}
	return *o.Imei
}

// GetImeiOk returns a tuple with the Imei field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetImeiOk() (*string, bool) {
	if o == nil || o.Imei == nil {
		return nil, false
	}
	return o.Imei, true
}

// HasImei returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasImei() bool {
	if o != nil && o.Imei != nil {
		return true
	}

	return false
}

// SetImei gets a reference to the given string and assigns it to the Imei field.
func (o *CreateDeviceRequest) SetImei(v string) {
	o.Imei = &v
}

// GetNetwork returns the Network field value if set, zero value otherwise.
func (o *CreateDeviceRequest) GetNetwork() NetworkMetadata {
	if o == nil || o.Network == nil {
		var ret NetworkMetadata
		return ret
	}
	return *o.Network
}

// GetNetworkOk returns a tuple with the Network field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateDeviceRequest) GetNetworkOk() (*NetworkMetadata, bool) {
	if o == nil || o.Network == nil {
		return nil, false
	}
	return o.Network, true
}

// HasNetwork returns a boolean if a field has been set.
func (o *CreateDeviceRequest) HasNetwork() bool {
	if o != nil && o.Network != nil {
		return true
	}

	return false
}

// SetNetwork gets a reference to the given NetworkMetadata and assigns it to the Network field.
func (o *CreateDeviceRequest) SetNetwork(v NetworkMetadata) {
	o.Network = &v
}

func (o CreateDeviceRequest) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Tags != nil {
		toSerialize["tags"] = o.Tags
	}
	if o.Firmware != nil {
		toSerialize["firmware"] = o.Firmware
	}
	if o.Config != nil {
		toSerialize["config"] = o.Config
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Imsi != nil {
		toSerialize["imsi"] = o.Imsi
	}
	if o.Imei != nil {
		toSerialize["imei"] = o.Imei
	}
	if o.Network != nil {
		toSerialize["network"] = o.Network
	}
	return json.Marshal(toSerialize)
}

type NullableCreateDeviceRequest struct {
	value *CreateDeviceRequest
	isSet bool
}

func (v NullableCreateDeviceRequest) Get() *CreateDeviceRequest {
	return v.value
}

func (v *NullableCreateDeviceRequest) Set(val *CreateDeviceRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateDeviceRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateDeviceRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateDeviceRequest(val *CreateDeviceRequest) *NullableCreateDeviceRequest {
	return &NullableCreateDeviceRequest{value: val, isSet: true}
}

func (v NullableCreateDeviceRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateDeviceRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
