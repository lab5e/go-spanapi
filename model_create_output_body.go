/*
The Span API

API for device, collection, output and firmware management

API version: 5.0.5 contented-jamila
Contact: dev@lab5e.com
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package spanapi

import (
	"encoding/json"
)

// checks if the CreateOutputBody type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateOutputBody{}

// CreateOutputBody Request type when creating new outputs
type CreateOutputBody struct {
	Type *OutputType `json:"type,omitempty"`
	Config *OutputConfig `json:"config,omitempty"`
	Enabled *bool `json:"enabled,omitempty"`
	Tags *map[string]string `json:"tags,omitempty"`
}

// NewCreateOutputBody instantiates a new CreateOutputBody object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateOutputBody() *CreateOutputBody {
	this := CreateOutputBody{}
	var type_ OutputType = OUTPUTTYPE_UNDEFINED
	this.Type = &type_
	return &this
}

// NewCreateOutputBodyWithDefaults instantiates a new CreateOutputBody object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateOutputBodyWithDefaults() *CreateOutputBody {
	this := CreateOutputBody{}
	var type_ OutputType = OUTPUTTYPE_UNDEFINED
	this.Type = &type_
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *CreateOutputBody) GetType() OutputType {
	if o == nil || IsNil(o.Type) {
		var ret OutputType
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOutputBody) GetTypeOk() (*OutputType, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *CreateOutputBody) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given OutputType and assigns it to the Type field.
func (o *CreateOutputBody) SetType(v OutputType) {
	o.Type = &v
}

// GetConfig returns the Config field value if set, zero value otherwise.
func (o *CreateOutputBody) GetConfig() OutputConfig {
	if o == nil || IsNil(o.Config) {
		var ret OutputConfig
		return ret
	}
	return *o.Config
}

// GetConfigOk returns a tuple with the Config field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOutputBody) GetConfigOk() (*OutputConfig, bool) {
	if o == nil || IsNil(o.Config) {
		return nil, false
	}
	return o.Config, true
}

// HasConfig returns a boolean if a field has been set.
func (o *CreateOutputBody) HasConfig() bool {
	if o != nil && !IsNil(o.Config) {
		return true
	}

	return false
}

// SetConfig gets a reference to the given OutputConfig and assigns it to the Config field.
func (o *CreateOutputBody) SetConfig(v OutputConfig) {
	o.Config = &v
}

// GetEnabled returns the Enabled field value if set, zero value otherwise.
func (o *CreateOutputBody) GetEnabled() bool {
	if o == nil || IsNil(o.Enabled) {
		var ret bool
		return ret
	}
	return *o.Enabled
}

// GetEnabledOk returns a tuple with the Enabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOutputBody) GetEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.Enabled) {
		return nil, false
	}
	return o.Enabled, true
}

// HasEnabled returns a boolean if a field has been set.
func (o *CreateOutputBody) HasEnabled() bool {
	if o != nil && !IsNil(o.Enabled) {
		return true
	}

	return false
}

// SetEnabled gets a reference to the given bool and assigns it to the Enabled field.
func (o *CreateOutputBody) SetEnabled(v bool) {
	o.Enabled = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *CreateOutputBody) GetTags() map[string]string {
	if o == nil || IsNil(o.Tags) {
		var ret map[string]string
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateOutputBody) GetTagsOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *CreateOutputBody) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given map[string]string and assigns it to the Tags field.
func (o *CreateOutputBody) SetTags(v map[string]string) {
	o.Tags = &v
}

func (o CreateOutputBody) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateOutputBody) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.Config) {
		toSerialize["config"] = o.Config
	}
	if !IsNil(o.Enabled) {
		toSerialize["enabled"] = o.Enabled
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableCreateOutputBody struct {
	value *CreateOutputBody
	isSet bool
}

func (v NullableCreateOutputBody) Get() *CreateOutputBody {
	return v.value
}

func (v *NullableCreateOutputBody) Set(val *CreateOutputBody) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateOutputBody) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateOutputBody) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateOutputBody(val *CreateOutputBody) *NullableCreateOutputBody {
	return &NullableCreateOutputBody{value: val, isSet: true}
}

func (v NullableCreateOutputBody) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateOutputBody) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


